services:

  webserver:
    build:
      context: "${STACK_DIR}"
      dockerfile: "${STACK_DIR}/.docker/services/webserver/version/${PHP_VERSION}/Dockerfile"
      args:
        uid: "${PHP_UID}"
    image: "${PROJECT}_webserver"
    container_name: "${PROJECT}_webserver"
    ports:
      - "${SERVICE_PORT}:80"
    volumes:
      # Log
      - "${STACK_DIR}/logs/nginx:/var/log/nginx"
      # PHP
      - "${STACK_DIR}/.docker/services/webserver/config/conf.d:/usr/local/etc/php/conf.d:ro"
      # Web
      - "${STACK_DIR}/www:/var/www"
    environment:
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}

  database:
    build:
      context: "services/database"
    image: "${PROJECT}_database"
    container_name: "${PROJECT}_database"
    ports:
      - "${DB_PORT}:3306"
    volumes:
      - ./services/database/config/conf.d/my.cnf:/etc/mysql/conf.d/my.cnf
      - database-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}

# Volumes
volumes:
  database-data: